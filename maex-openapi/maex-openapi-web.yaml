# This file is automatically generated, do not modify!
# Modifications should be made to the source file 'maex-openapi.yaml'
---
openapi: 3.0.1
info:
  title: Remondis MAEX
  description: 'API definition for MAEX back end hosted on Azure as Functions App.'
  version: 0.0.1
tags:
  - name: app
    description: Endpoint is used in Android/iOS apps
  - name: lock
    description: Endpoint is used by locks at waste disposal sites
  - name: management
    description: Endpoint is used for management tasks

paths:
  
  /site:
    get:
      tags:
        - web
      summary: Get sites
      description: Get all sites
      operationId: getSites
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Site'

  "/site/{siteId}":
    get:
      tags:
        - app
        - web
      summary: Gets a site
      description: Gets information about a waste disposal site
      operationId: getSite
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
        404:
          description: Site not found
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/NotFoundError'

  "/site/{siteId}/wasteItems":
    get:
      tags:
        - app
        - web
      summary: Gets waste items available at this site
      description: Gets a list of waste items that can be disposed at this site
      operationId: getWasteItemsForSite
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WasteItem'
        404:
          description: Site not found
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/NotFoundError'

  "/site/{siteId}/openingHoursEntries":
    get:
      tags:
        - web
      summary: Gets opening hours entries for this site
      description: Gets opening hours entries with chain information for this site
      operationId: getOpeningHoursEntriesForSite
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OpeningHoursEntry'
        404:
          description: Site not found
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/NotFoundError'

    put:
      tags:
        - web
      summary: Sets opening hours entries for this site
      description: Replaces opening hours entries for this site
      operationId: setOpeningHoursEntriesForSite
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/OpeningHoursEntry'
      responses:
        204:
          description: Successful operation
        404:
          description: Site not found
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/NotFoundError'

  "/site/{siteId}/locks":
    get:
      tags:
        - web
      summary: Gets locks for this site
      description: Gets locks that are assigned to this site
      operationId: getLocksForSite
      parameters:
        - name: siteId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Lock'
        404:
          description: Site not found
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/NotFoundError'

  "/lock/{lockId}/open":
    post:
      tags:
        - web
      summary: Open lock
      description: Request lock to open
      operationId: openLock
      parameters:
        - name: lockId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        204:
          description: Successful operation
        403:
          description: User not allowed to open lock
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/AccessDeniedError'
        404:
          description: Lock not found
          content:
            application/json:
              schema:
                anyOf:
                  - $ref: '#/components/schemas/NotFoundError'

  /profile:
    get:
      tags:
        - web
      summary: Gets a user profile
      description: Get a user account from the AD
      operationId: getProfile
      responses:
        200:
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'

components:
  parameters:
    LockApiKey:
      in: header
      name: X-Lock-Api-Key
      schema:
        type: string
      required: true

    ManagementApiKey:
      in: header
      name: X-Management-Api-Key
      schema:
        type: string
      required: true

  schemas:
    ErrorWithCode:
      description: Base error type
      type: object
      properties:
        error:
          type: object
          properties:
            code:
              type: string
            message:
              type: string
          required:
            - code
            - message
          additionalProperties: true
      required:
        - error

    AccessDeniedError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    AnotherBookingAlreadyExistsError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    AnotherAppointmentAlreadyExistsError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    AppointmentAlreadyStartedError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    AppointmentSlotBookedError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    WrongSiteError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    MissingHeaderError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    EnvironmentError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    MailError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    AdditionalFieldValueExistsError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    AdditionalFieldValueMissingError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    LockAlreadyAssignedError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    LockUnassignedError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    MessageDecryptionError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    InvalidMessageContentError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    GraphApiError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    MaxAmountExceededError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    PaymentsNotSupportedError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    PaymentNotCancellableError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    PaymentRedirectUrlMissingError:
      allOf:
        - $ref: '#/components/schemas/ErrorWithCode'

    Version:
      description: Backend version information
      type: object
      properties:
        version:
          type: string
        stage:
          type: string
        commitHash:
          type: string
      required:
        - version
        - stage
        - commitHash

    Site:
      description: Waste disposal site
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        streetAddress:
          type: string
        postalCode:
          type: string
        city:
          type: string
        phoneNumber:
          type: string
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        modules:
          type: array
          items:
            $ref: '#/components/schemas/Module'
        basePrice:
          type: number
          description: Base price in Euro
        tutorial:
          type: string

      required:
        - id
        - name
        - streetAddress
        - postalCode
        - city
        - coordinates
        - modules
        - tutorial

    Coordinates:
      description: WGS84 coordinates
      type: object
      properties:
        latitude:
          type: number
        longitude:
          type: number
      required:
        - latitude
        - longitude

    WasteItem:
      description: Waste item that can be disposed at a site
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        examples:
          type: string
        imageUri:
          type: string
        iconUri:
          type: string
        price:
          type: number
          description: Price in Euro
        unit:
          type: string
        maxAmount:
          type: integer
      required:
        - id
        - name
        - price
        - unit

    OpeningHoursSlot:
      description: One slot of the opening hours
      type: object
      properties:
        startMinutes:
          type: integer
        endMinutes:
          type: integer
      required:
        - startMinutes
        - endMinutes

    OpeningHours:
      description: List of opening hours for each day of the week
      type: object
      properties:
        monday:
          type: array
          items:
            $ref: '#/components/schemas/OpeningHoursSlot'
        tuesday:
          type: array
          items:
            $ref: '#/components/schemas/OpeningHoursSlot'
        wednesday:
          type: array
          items:
            $ref: '#/components/schemas/OpeningHoursSlot'
        thursday:
          type: array
          items:
            $ref: '#/components/schemas/OpeningHoursSlot'
        friday:
          type: array
          items:
            $ref: '#/components/schemas/OpeningHoursSlot'
        saturday:
          type: array
          items:
            $ref: '#/components/schemas/OpeningHoursSlot'
        sunday:
          type: array
          items:
            $ref: '#/components/schemas/OpeningHoursSlot'
      required:
        - monday
        - tuesday
        - wednesday
        - thursday
        - friday
        - saturday
        - sunday

    OpeningHoursResponse:
      description: Response with regular and extended opening hours
      type: object
      properties:
        regular:
          $ref: '#/components/schemas/OpeningHours'
        extended:
          $ref: '#/components/schemas/OpeningHours'
      required:
        - regular
        - extended

    OpeningHoursEntry:
      description: Opening hours entry with chain information
      type: object
      properties:
        openingType:
          type: string
          enum:
            - regular
            - extended
        weekday:
          type: string
          enum:
            - monday
            - tuesday
            - wednesday
            - thursday
            - friday
            - saturday
            - sunday
        startMinutes:
          type: integer
        endMinutes:
          type: integer
        chained:
          type: boolean
      required:
        - openingType
        - weekday
        - startMinutes
        - endMinutes
        - chained

    AppointmentSlot:
      description: Time slot for an appointment
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
      required:
        - start
        - end

    AppointmentSlotAvailability:
      description: Time slot for an appointment
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
        available:
          type: boolean
      required:
        - start
        - end
        - available

    BookingRequest:
      description: Request to create a new booking
      type: object
      properties:
        wasteItems:
          type: array
          items:
            $ref: '#/components/schemas/BookingRequestWasteItem'
          minItems: 1
      required:
        - wasteItems

    BookingRequestWasteItem:
      description: Waste item that is part of a booking request
      type: object
      properties:
        wasteItemId:
          type: string
          format: uuid
        amount:
          type: integer
      required:
        - wasteItemId
        - amount

    BookingWasteItem:
      description: Waste item that is part of a booking
      type: object
      properties:
        wasteItemId:
          type: string
          format: uuid
          nullable: true
        name:
          type: string
        unit:
          type: string
        price:
          type: number
          description: Price in Euro
        amount:
          type: integer
      required:
        - wasteItemId
        - name
        - unit
        - price
        - amount

    Booking:
      description: A booking
      type: object
      properties:
        wasteItems:
          type: array
          items:
            $ref: '#/components/schemas/BookingWasteItem'
      required:
        - wasteItems

    AppointmentRequest:
      description: Request to create a new appointment
      type: object
      properties:
        slot:
          $ref: '#/components/schemas/AppointmentSlot'
      required:
        - slot

    Appointment:
      description: An appointment
      type: object
      properties:
        container:
          type: string
        slot:
          $ref: '#/components/schemas/AppointmentSlot'
      required:
        - slot

    BookingWithAppointmentRequest:
      deprecated: true
      description: Request to create a booking and an appointment for this booking
      type: object
      properties:
        bookingRequest:
          $ref: '#/components/schemas/OldBookingRequest'
        appointmentRequest:
          $ref: '#/components/schemas/OldAppointmentRequest'
      required:
        - bookingRequest
        - appointmentRequest

    BookingWithAppointmentResponse:
      deprecated: true
      description: Response for a booking that is created together with an appointment
      type: object
      properties:
        booking:
          $ref: '#/components/schemas/OldBooking'
        appointment:
          $ref: '#/components/schemas/OldAppointment'
      required:
        - booking
        - appointment

    Module:
      description: Available modules that can be supported by a site
      type: string
      enum:
        - booking
        - appointment
        - payment

    AdditionalField:
      description: Additional field for specific sites
      type: object
      properties:
        id:
          type: string
          format: uuid
        label:
          type: string
        description:
          type: string
        value:
          type: string
      required:
        - id
        - label

    AdditionalFieldValue:
      description: Additional field value
      type: object
      properties:
        id:
          type: string
          format: uuid
        value:
          type: string
      required:
        - id
        - value

    AdditionalFieldValidation:
      description: Validation result for additional field
      type: object
      properties:
        id:
          type: string
          format: uuid
        valid:
          type: boolean
        message:
          type: string
          description: Message is only present if valid is false
      required:
        - id
        - valid

    VerifyTokenRequest:
      description: Encrypted message containing lock token to be verified
      type: object
      properties:
        encryptedMessage:
          type: string
          format: byte
        sessionId:
          type: string
      required:
        - encryptedMessage
        - sessionId

    VerifyTokenResponse:
      description: Lock token verification result
      type: object
      properties:
        valid:
          type: boolean
        code:
          type: string
        message:
          type: string
      required:
        - valid

    RegisterLockRequest:
      description: Request data for registering a new lock
      type: object
      properties:
        hardwareId:
          type: string
        apiKey:
          type: string
      required:
        - hardwareId
        - apiKey

    LockWithApiKey:
      description: A lock with API key
      type: object
      properties:
        id:
          type: string
          format: uuid
        hardwareId:
          type: string
        apiKey:
          type: string
        siteId:
          type: string
          format: uuid
      required:
        - id
        - hardwareId
        - apiKey

    Lock:
      description: A lock
      type: object
      properties:
        id:
          type: string
          format: uuid
        hardwareId:
          type: string
        siteId:
          type: string
          format: uuid
      required:
        - id
        - hardwareId

    LockAlertRequest:
      description: Lock alert request body
      type: object
      properties:
        reason:
          type: string
        message:
          type: string
      required:
        - reason

    LogEvent:
      description: Event log entry
      type: object
      properties:
        category:
          type: string
        eventType:
          type: string
        appVersion:
          type: string
          description: 'Maex [OS] [App version], for example Maex Android 1.2.3'
        data:
          type: object
          additionalProperties: true
      required:
        - category
        - eventType
        - appVersion

    PaymentStatus:
      description: Payment status
      type: string
      enum:
        - open
        - cancelled
        - pending
        - expired
        - failed
        - paid

    Payment:
      description: Payment information
      type: object
      properties:
        id:
          type: string
          format: uuid
        checkoutUrl:
          type: string
          format: uri
        status:
          $ref: '#/components/schemas/PaymentStatus'
      required:
        - id
        - status

    BookingOrAppointmentRequest:
      description: Request to create a booking and/or an appointment
      type: object
      properties:
        siteId:
          type: string
          format: uuid
        paymentRedirectUrl:
          type: string
          format: uri
        bookingRequest:
          $ref: '#/components/schemas/BookingRequest'
        appointmentRequest:
          $ref: '#/components/schemas/AppointmentRequest'
      required:
        - siteId

    BookingOrAppointmentResponse:
      description: Response for a booking that is created together with an appointment
      type: object
      properties:
        userId:
          type: string
        siteId:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        basePrice:
          type: number
          description: Base price in Euro
        additionalFields:
          type: array
          items:
            $ref: '#/components/schemas/BookingOrAppointmentAdditionalField'
        token:
          type: string
          format: byte
        booking:
          $ref: '#/components/schemas/Booking'
        appointment:
          $ref: '#/components/schemas/Appointment'
        payment:
          $ref: '#/components/schemas/Payment'
      required:
        - userId
        - siteId
        - createdAt
        - additionalFields
        - token

    BookingOrAppointmentAdditionalField:
      description: Additional field that is part of an appointment
      type: object
      properties:
        additionalFieldId:
          type: string
          format: uuid
          nullable: true
        label:
          type: string
        value:
          type: string
      required:
        - additionalFieldId
        - label
        - value

    MollieWebhookRequest:
      description: Status update by Mollie
      type: object
      properties:
        id:
          type: string
      required:
        - id

    OldBooking:
      deprecated: true
      description: A booking (old response, now replaced by BookingOrAppointment)
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
        siteId:
          type: string
          format: uuid
        wasteItems:
          type: array
          items:
            $ref: '#/components/schemas/BookingWasteItem'
        createdAt:
          type: string
          format: date-time
        additionalFields:
          type: array
          items:
            $ref: '#/components/schemas/BookingOrAppointmentAdditionalField'
        basePrice:
          type: number
          description: Base price in Euro
      required:
        - id
        - siteId
        - userId
        - wasteItems
        - createdAt
        - additionalFields

    OldAppointment:
      deprecated: true
      description: An appointment (old response, now replaced by BookingOrAppointment)
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
        siteId:
          type: string
          format: uuid
        container:
          type: string
        slot:
          $ref: '#/components/schemas/AppointmentSlot'
        bookingId:
          type: string
          format: uuid
          description: ID of linked booking (optional)
        createdAt:
          type: string
          format: date-time
        additionalFields:
          type: array
          items:
            $ref: '#/components/schemas/BookingOrAppointmentAdditionalField'
        token:
          type: string
          format: byte
      required:
        - id
        - siteId
        - userId
        - slot
        - createdAt
        - additionalFields
        - token

    OldAppointmentRequest:
      deprecated: true
      description: Request to create a new appointment (old request, now replaced by
        BookingOrAppointment)
      type: object
      properties:
        siteId:
          type: string
          format: uuid
        slot:
          $ref: '#/components/schemas/AppointmentSlot'
      required:
        - siteId
        - slot

    OldBookingRequest:
      deprecated: true
      description: Request to create a new booking (old request, now replaced by
        BookingOrAppointment)
      type: object
      properties:
        siteId:
          type: string
          format: uuid
        wasteItems:
          type: array
          items:
            $ref: '#/components/schemas/BookingRequestWasteItem'
          minItems: 1
      required:
        - siteId
        - wasteItems

    WebSocketConnection:
      description: Connection URL returned by WebSocket negotiation endpoint
      type: object
      properties:
        url:
          type: string
          format: uri
      required:
        - url

    Profile:
      description: User profile
      type: object
      properties:
        id:
          type: string
        displayName:
          type: string
        givenName:
          type: string
        surname:
          type: string
        mail:
          type: string
        streetAddress:
          type: string
        postalCode:
          type: string
        city:
          type: string
      required:
        - id
        - displayName
        - givenName
        - surname
        - streetAddress
        - postalCode
        - city
